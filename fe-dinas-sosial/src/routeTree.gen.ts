/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from "@tanstack/react-router";

import { Route as rootRouteImport } from "./routes/__root";
import { Route as R403RouteImport } from "./routes/403";

const HomeLazyRouteImport = createFileRoute("/home")();
const AccountLazyRouteImport = createFileRoute("/account")();
const AboutLazyRouteImport = createFileRoute("/about")();
const IndexLazyRouteImport = createFileRoute("/")();
const AuthLoginLazyRouteImport = createFileRoute("/Auth/login")();

const HomeLazyRoute = HomeLazyRouteImport.update({
  id: "/home",
  path: "/home",
  getParentRoute: () => rootRouteImport,
} as any).lazy(() => import("./routes/home.lazy").then((d) => d.Route));
const AccountLazyRoute = AccountLazyRouteImport.update({
  id: "/account",
  path: "/account",
  getParentRoute: () => rootRouteImport,
} as any).lazy(() => import("./routes/account.lazy").then((d) => d.Route));
const AboutLazyRoute = AboutLazyRouteImport.update({
  id: "/about",
  path: "/about",
  getParentRoute: () => rootRouteImport,
} as any).lazy(() => import("./routes/about.lazy").then((d) => d.Route));
const R403Route = R403RouteImport.update({
  id: "/403",
  path: "/403",
  getParentRoute: () => rootRouteImport,
} as any);
const IndexLazyRoute = IndexLazyRouteImport.update({
  id: "/",
  path: "/",
  getParentRoute: () => rootRouteImport,
} as any).lazy(() => import("./routes/index.lazy").then((d) => d.Route));
const AuthLoginLazyRoute = AuthLoginLazyRouteImport.update({
  id: "/Auth/login",
  path: "/Auth/login",
  getParentRoute: () => rootRouteImport,
} as any).lazy(() => import("./routes/Auth/login.lazy").then((d) => d.Route));

export interface FileRoutesByFullPath {
  "/": typeof IndexLazyRoute;
  "/403": typeof R403Route;
  "/about": typeof AboutLazyRoute;
  "/account": typeof AccountLazyRoute;
  "/home": typeof HomeLazyRoute;
  "/Auth/login": typeof AuthLoginLazyRoute;
}
export interface FileRoutesByTo {
  "/": typeof IndexLazyRoute;
  "/403": typeof R403Route;
  "/about": typeof AboutLazyRoute;
  "/account": typeof AccountLazyRoute;
  "/home": typeof HomeLazyRoute;
  "/Auth/login": typeof AuthLoginLazyRoute;
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport;
  "/": typeof IndexLazyRoute;
  "/403": typeof R403Route;
  "/about": typeof AboutLazyRoute;
  "/account": typeof AccountLazyRoute;
  "/home": typeof HomeLazyRoute;
  "/Auth/login": typeof AuthLoginLazyRoute;
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath;
  fullPaths: "/" | "/about" | "/account" | "/home" | "/Auth/login";
  fileRoutesByTo: FileRoutesByTo;
  to: "/" | "/about" | "/account" | "/home" | "/Auth/login";
  id: "__root__" | "/" | "/about" | "/account" | "/home" | "/Auth/login";
  fileRoutesById: FileRoutesById;
}
export interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute;
  R403Route: typeof R403Route;
  AboutLazyRoute: typeof AboutLazyRoute;
  AccountLazyRoute: typeof AccountLazyRoute;
  HomeLazyRoute: typeof HomeLazyRoute;
  AuthLoginLazyRoute: typeof AuthLoginLazyRoute;
}

declare module "@tanstack/react-router" {
  interface FileRoutesByPath {
    "/home": {
      id: "/home";
      path: "/home";
      fullPath: "/home";
      preLoaderRoute: typeof HomeLazyRouteImport;
      parentRoute: typeof rootRouteImport;
    };
    "/account": {
      id: "/account";
      path: "/account";
      fullPath: "/account";
      preLoaderRoute: typeof AccountLazyRouteImport;
      parentRoute: typeof rootRouteImport;
    };
    "/about": {
      id: "/about";
      path: "/about";
      fullPath: "/about";
      preLoaderRoute: typeof AboutLazyRouteImport;
      parentRoute: typeof rootRouteImport;
    };
    "/403": {
      id: "/403";
      path: "/403";
      fullPath: "/403";
      preLoaderRoute: typeof R403RouteImport;
      parentRoute: typeof rootRouteImport;
    };
    "/": {
      id: "/";
      path: "/";
      fullPath: "/";
      preLoaderRoute: typeof IndexLazyRouteImport;
      parentRoute: typeof rootRouteImport;
    };
    "/Auth/login": {
      id: "/Auth/login";
      path: "/Auth/login";
      fullPath: "/Auth/login";
      preLoaderRoute: typeof AuthLoginLazyRouteImport;
      parentRoute: typeof rootRouteImport;
    };
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
  R403Route: R403Route,
  AboutLazyRoute: AboutLazyRoute,
  AccountLazyRoute: AccountLazyRoute,
  HomeLazyRoute: HomeLazyRoute,
  AuthLoginLazyRoute: AuthLoginLazyRoute,
};
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>();
